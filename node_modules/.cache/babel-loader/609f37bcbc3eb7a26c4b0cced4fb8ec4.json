{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekbodapati/Desktop/hiring-application/src/components/Editor.js\";\nimport React, { Component } from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport './Editor.css';\nimport 'codemirror/lib/codemirror.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('codemirror/mode/python/python');\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      this.setState({\n        inputs: event.target.value\n      });\n    };\n\n    this.state = {\n      code: '',\n      // The code is stored here!!\n      inputs: '',\n      // The inputs are stored here!!\n      endpoint: \"ws://localhost:8765\",\n      messages: 'hero'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const {\n      code,\n      inputs\n    } = this.state;\n    event.preventDefault(); //alert(`Code is ${code}\\nInputs are ${inputs}`);  \n\n    this.componentDidMount();\n  }\n\n  componentDidMount() {\n    //initialize connection\n    const ws = new WebSocket(this.state.endpoint);\n\n    ws.onopen = () => {\n      //send any msg from Client if needed\n      ws.send(JSON.stringify({\n        message: this.state.code,\n        inputs: this.state.inputs\n      })); //ws.send();\n    }; //save whatever response from client\n\n\n    ws.onmessage = evt => {\n      this.setState({\n        messages: evt.data\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Python Interpreter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"editor\",\n          children: /*#__PURE__*/_jsxDEV(CodeMirror, {\n            value: \"print(\\\"Hello world!\\\")\",\n            options: {\n              mode: 'python',\n              lineNumbers: true,\n              smartIndent: true\n            },\n            onChange: (editor, data, value) => {\n              this.setState({\n                code: value\n              });\n            },\n            defaultValue: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-lg\",\n            value: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textAreaColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"inputs\",\n                cols: \"150\",\n                rows: \"10\",\n                defaultValue: \"\",\n                value: this.state.inputs,\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                readOnly: true,\n                cols: \"150\",\n                rows: \"10\",\n                id: \"output\",\n                value: this.state.messages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Editor;\n/*\n    handleChange(event){\n        this.setState({\n          [event.target.name] : event.target.value\n        })\n    }\n\n    <textarea \n        id = \"inputs\" \n        cols=\"150\" \n        rows=\"10\" \n        defaultValue=\"\" \n        value={this.state.code} \n        onChange={this.handleCodeChange}\n    ></textarea>\n    \n    \n        const connection = new WebSocket('ws://localhost:8765');\n\n        connection.onopen = () => {\n        console.log('connected');\n        };\n\n        connection.onclose = () => {\n        console.error('disconnected');\n        };\n\n        connection.onerror = error => {\n        console.error('failed to connect', error);\n        };\n        connection.send(JSON.stringify({message:code, inputs:inputs}));\n\n        connection.onmessage = () => {\n        document.getElementById(\"output\").innerHTML = event.data;\n        }    \n    \n*/","map":{"version":3,"sources":["/Users/abhishekbodapati/Desktop/hiring-application/src/components/Editor.js"],"names":["React","Component","UnControlled","CodeMirror","require","Editor","constructor","props","handleInputChange","event","setState","inputs","target","value","state","code","endpoint","messages","handleSubmit","bind","preventDefault","componentDidMount","ws","WebSocket","onopen","send","JSON","stringify","message","onmessage","evt","data","render","mode","lineNumbers","smartIndent","editor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\nimport './Editor.css'\nimport 'codemirror/lib/codemirror.css';\nrequire('codemirror/mode/python/python');\n\nclass Editor extends Component{\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',       // The code is stored here!!\n            inputs: '',     // The inputs are stored here!!\n            endpoint:\"ws://localhost:8765\",\n            messages:'hero'\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange = event => {\n        this.setState({ inputs: event.target.value });\n    }\n    \n    handleSubmit(event) {\n        const { code, inputs } = this.state\n        event.preventDefault();\n        //alert(`Code is ${code}\\nInputs are ${inputs}`);  \n        this.componentDidMount();\n    }\n\n    componentDidMount(){\n        //initialize connection\n        const ws = new WebSocket(this.state.endpoint);\n\n        ws.onopen = () =>{\n            //send any msg from Client if needed\n            ws.send(JSON.stringify({message:this.state.code, inputs:this.state.inputs}));\n            //ws.send();\n        }\n\n        //save whatever response from client\n        ws.onmessage = (evt) => {\n            this.setState({ messages: evt.data });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <center><h1>Python Interpreter</h1></center>\n                <form onSubmit={this.handleSubmit}>\n                    <div id=\"editor\">\n                    <CodeMirror\n                        value='print(\"Hello world!\")'\n                        options={{\n                            mode: 'python',\n                            lineNumbers: true,\n                            smartIndent: true,\n                        }}\n                        onChange={(editor, data, value) => {\n                            this.setState({code: value})\n                        }}\n                        defaultValue={null}\n                    />\n                    </div>\n\n                    <center>\n                        <input \n                            type = \"submit\" \n                            className=\"btn btn-primary btn-lg\" \n                            value = \"Run\" \n                        />\n                    </center>\n\n                    <button onClick={this.handleSubmit}></button>\n                    \n                    <center>\n                        <div className=\"textAreaColumn\">\n                            <div>\n                                <span><h2>Input</h2></span>\n                                <textarea \n                                    id = \"inputs\" \n                                    cols=\"150\" \n                                    rows=\"10\" \n                                    defaultValue=\"\" \n                                    value={this.state.inputs} \n                                    onChange={this.handleInputChange}\n                                ></textarea>\n                            </div>\n                            <div>\n                                <span><h2>Output</h2></span>\n                                <textarea \n                                    readOnly \n                                    cols=\"150\" \n                                    rows=\"10\" \n                                    id=\"output\"\n                                    value={this.state.messages}\n                                ></textarea>\n                            </div>\n                        </div>\n                    </center>\n                </form>    \n            </div>\n        );\n    }\n}\n\nexport default Editor;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n    handleChange(event){\n        this.setState({\n          [event.target.name] : event.target.value\n        })\n    }\n\n    <textarea \n        id = \"inputs\" \n        cols=\"150\" \n        rows=\"10\" \n        defaultValue=\"\" \n        value={this.state.code} \n        onChange={this.handleCodeChange}\n    ></textarea>\n    \n    \n        const connection = new WebSocket('ws://localhost:8765');\n\n        connection.onopen = () => {\n        console.log('connected');\n        };\n\n        connection.onclose = () => {\n        console.error('disconnected');\n        };\n\n        connection.onerror = error => {\n        console.error('failed to connect', error);\n        };\n        connection.send(JSON.stringify({message:code, inputs:inputs}));\n\n        connection.onmessage = () => {\n        document.getElementById(\"output\").innerHTML = event.data;\n        }    \n    \n*/\n    "]},"metadata":{},"sourceType":"module"}