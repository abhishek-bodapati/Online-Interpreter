{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekbodapati/Desktop/hiring-application/src/components/Editor.js\";\nimport React, { Component, useRef, useEffect } from 'react';\nimport CodeMirrorEditor from './CodeMirrorEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCodeChange = event => {\n      this.setState({\n        code: event.target.value\n      });\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        inputs: event.target.value\n      });\n    };\n\n    this.state = {\n      code: 'default text',\n      inputs: 'sample input'\n    };\n    /*this.handleChange = this.handleChange.bind(this);*/\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const {\n      code,\n      inputs\n    } = this.state;\n    event.preventDefault();\n    alert(`Code is ${code}\\nInputs are ${inputs}`);\n    const connection = new WebSocket('ws://localhost:8765');\n\n    connection.onopen = () => {\n      console.log('connected');\n    };\n\n    connection.onclose = () => {\n      console.error('disconnected');\n    };\n\n    connection.onerror = error => {\n      console.error('failed to connect', error);\n    };\n\n    connection.send(JSON.stringify({\n      message: message,\n      inputs: inputs\n    }));\n\n    connection.onmessage = () => {\n      document.getElementById(\"output\").innerHTML = event.data;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Python Interpreter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"editor\",\n          onChange: this.handleInputChange,\n          children: /*#__PURE__*/_jsxDEV(CodeMirrorEditor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-lg\",\n            value: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textAreaColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"inputs\",\n                cols: \"150\",\n                rows: \"10\",\n                defaultValue: \"\",\n                value: this.state.inputs,\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                readOnly: true,\n                cols: \"150\",\n                rows: \"10\",\n                id: \"output\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Editor;\n/*\n    handleChange(event){\n        this.setState({\n          [event.target.name] : event.target.value\n        })\n    }\n\n    <textarea \n        id = \"inputs\" \n        cols=\"150\" \n        rows=\"10\" \n        defaultValue=\"\" \n        value={this.state.code} \n        onChange={this.handleCodeChange}\n    ></textarea>*/","map":{"version":3,"sources":["/Users/abhishekbodapati/Desktop/hiring-application/src/components/Editor.js"],"names":["React","Component","useRef","useEffect","CodeMirrorEditor","Editor","constructor","props","handleCodeChange","event","setState","code","target","value","handleInputChange","inputs","state","handleSubmit","bind","preventDefault","alert","connection","WebSocket","onopen","console","log","onclose","error","onerror","send","JSON","stringify","message","onmessage","document","getElementById","innerHTML","data","render"],"mappings":"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","sourcesContent":["import React, { Component, useRef, useEffect } from 'react'\nimport CodeMirrorEditor from './CodeMirrorEditor';\n\nclass Editor extends Component{\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            code: 'default text',\n            inputs: 'sample input'\n        };\n        /*this.handleChange = this.handleChange.bind(this);*/\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleCodeChange = event => {\n        this.setState({ code: event.target.value });\n    }\n\n    handleInputChange = event => {\n        this.setState({ inputs: event.target.value });\n    }\n    \n    handleSubmit(event) {\n        const { code, inputs } = this.state\n        event.preventDefault();\n        alert(`Code is ${code}\\nInputs are ${inputs}`);\n        const connection = new WebSocket('ws://localhost:8765');\n\n        connection.onopen = () => {\n        console.log('connected');\n        };\n\n        connection.onclose = () => {\n        console.error('disconnected');\n        };\n\n        connection.onerror = error => {\n        console.error('failed to connect', error);\n        };\n        connection.send(JSON.stringify({message:message, inputs:inputs}));\n\n        connection.onmessage = () => {\n        document.getElementById(\"output\").innerHTML = event.data;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <center><h1>Python Interpreter</h1></center>\n                <form onSubmit={this.handleSubmit}>\n                    <div id=\"editor\" onChange={this.handleInputChange}>\n                        <CodeMirrorEditor />\n                    </div>\n\n                    <center>\n                        <input \n                            type = \"submit\" \n                            className=\"btn btn-primary btn-lg\" \n                            value = \"Run\" \n                        />\n                    </center>\n\n                    <button onClick={this.handleSubmit}></button>\n                    \n                    <center>\n                        <div className=\"textAreaColumn\">\n                            <div>\n                                <span><h2>Input</h2></span>\n                                <textarea \n                                    id = \"inputs\" \n                                    cols=\"150\" \n                                    rows=\"10\" \n                                    defaultValue=\"\" \n                                    value={this.state.inputs} \n                                    onChange={this.handleInputChange}\n                                ></textarea>\n                            </div>\n                            <div>\n                                <span><h2>Output</h2></span>\n                                <textarea \n                                    readOnly \n                                    cols=\"150\" \n                                    rows=\"10\" \n                                    id=\"output\"\n                                ></textarea>\n                            </div>\n                        </div>\n                    </center>\n                </form>    \n            </div>\n        );\n    }\n}\n\nexport default Editor;\n\n/*\n    handleChange(event){\n        this.setState({\n          [event.target.name] : event.target.value\n        })\n    }\n\n    <textarea \n        id = \"inputs\" \n        cols=\"150\" \n        rows=\"10\" \n        defaultValue=\"\" \n        value={this.state.code} \n        onChange={this.handleCodeChange}\n    ></textarea>*/\n    "]},"metadata":{},"sourceType":"module"}